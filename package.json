{
  "name": "copy-paste-template",
  "displayName": "Copy Templater",
  "description": "A VSCode extension designed to streamline the process of sharing code snippets for Language Learning Model (LLM) input. It allows developers to quickly format and copy code with the proper markdown formatting and contextual information like the file path.",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.89.0"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Utilities"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "LLM Code Clipper",
      "properties": {
        "copy-paste-template.template": {
          "type": "string",
          "default": "{filePath}{range}\n```\n{text}\n```\n",
          "markdownDescription": "This template determines the format of the text that is copied to the clipboard. You can use placeholders to include specific pieces of information:\n\n- `{filePath}`: The relative path of the file.\n- `{range}`: The range of the selection, formatted according to the `copy-paste-template.rangeTemplate` configuration. This includes the start line, end line, start character, and end character of the selection.\n- `{text}`: The selected text.\n\nFor example, the default template will result in a copy that includes the file path, the range of the selection, and the selected text, each on a separate line. Note that the selected text is enclosed in triple backticks (\\`\\`\\`), which is the markdown syntax for a code block.\n\nYou can modify this template to suit your needs. Just make sure to keep the placeholders inside curly braces `{}`.",
          "editPresentation": "multilineText",
          "order": 1
        },
        "copy-paste-template.rangeTemplate": {
          "type": "string",
          "default": ":{startLine}:{startChar}-{endLine}:{endChar}",
          "markdownDescription": "This template determines the format of the range of the selection that is included in the copied text. You can use placeholders to include specific pieces of information:\n\n- `{startLine}`: The line number where the selection starts.\n- `{endLine}`: The line number where the selection ends.\n- `{startChar}`: The character position where the selection starts.\n- `{endChar}`: The character position where the selection ends.\n\nFor example, the default template will result in a range that includes the start line and character, and the end line and character, separated by a dash. If the selection starts and ends on the same line and character, this will be a single number.\n\nYou can modify this template to suit your needs. Just make sure to keep the placeholders inside curly braces `{}`.",
          "editPresentation": "multilineText",
          "order": 2
        },
        "copy-paste-template.removeRootIndentation": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Remove any root indentation from the copied selection.",
          "order": 3
        }
      }
    },
    "commands": [
      {
        "command": "copy-paste-template.copySelection",
        "title": "Copy Selection for LLM Input"
      },
      {
        "command": "copy-paste-template.copyFile",
        "title": "Copy Entire File for LLM Input"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "yarn run check-types && yarn run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "yarn run check-types && yarn run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.89.0",
    "@typescript-eslint/eslint-plugin": "^7.7.1",
    "@typescript-eslint/parser": "^7.7.1",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.3.9",
    "esbuild": "0.20.2",
    "eslint": "^8.57.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.4.5"
  }
}
